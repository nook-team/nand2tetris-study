"use strict";(self.webpackChunkntt_study=self.webpackChunkntt_study||[]).push([[145],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,k=p["".concat(u,".").concat(m)]||p[m]||s[m]||i;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9841:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2,slug:"/introduction"},l="Introduction",o={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"The Hack Computer",source:"@site/docs/02.introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/nand2tetris-study/introduction",draft:!1,editUrl:"https://github.com/nook-team/nand2tetris-study/tree/main/docs/02.introduction.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,slug:"/introduction"},sidebar:"tutorialSidebar",previous:{title:"Nand2Tetris \uc2a4\ud130\ub514 \uc18c\uac1c",permalink:"/nand2tetris-study/"},next:{title:"Boolean functions and Gate Logic",permalink:"/nand2tetris-study/boolean-functions-and-gate-logic"}},u={},d=[{value:"The Hack Computer",id:"the-hack-computer",level:2},{value:"Nand to Tetris: the big picture",id:"nand-to-tetris-the-big-picture",level:2},{value:"Nand to Tetris: Part 1",id:"nand-to-tetris-part-1",level:2},{value:"How to build a chip?",id:"how-to-build-a-chip",level:2},{value:"Building a chip: design",id:"building-a-chip-design",level:2},{value:"Weekly Projects",id:"weekly-projects",level:2},{value:"Week1: Elementary logic gates",id:"week1-elementary-logic-gates",level:3},{value:"Week2: Arithmetic-Logic Unit",id:"week2-arithmetic-logic-unit",level:3},{value:"Week3: Registers and Memory",id:"week3-registers-and-memory",level:3},{value:"Week4: Writing low-level programs",id:"week4-writing-low-level-programs",level:3},{value:"Week5: Computer architecture",id:"week5-computer-architecture",level:3},{value:"Week6: Developing an assembler",id:"week6-developing-an-assembler",level:3}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("h2",{id:"the-hack-computer"},"The Hack Computer"),(0,a.kt)("p",null,"monitor --- ","[ Rom <-> CPU <-> RAM ]"," --- keyboard, mouse"),(0,a.kt)("p",null,"\ucef4\ud4e8\ud130\ub294 CPU, ROM, RAM \uc778 \uae30\ubcf8 \uc7a5\uce58\uc5d0 \ub354\ubd88\uc5b4 \ubaa8\ub2c8\ud130, \ud0a4\ubcf4\ub4dc \uc640 \uac19\uc740 \uc785\ucd9c\ub825 \uc7a5\uce58\ub97c \uac00\uc9d1\ub2c8\ub2e4.\n\uc6b0\ub9ac\uac00 \uc2e4\ud589\ud558\ub294 \uc571\uc774\ub098 \ud504\ub85c\uadf8\ub7a8\ub4e4\uc740 \uc5b4\ub5a4 CPU \uc704\uc5d0\uc11c \ub3cc\uc544\uac00\ub294\uc9c0 \uc5b4\ub5a4 \uc785\ub825 \uc7a5\uce58\ub85c \uc785\ub825 \ubc1b\ub294\uc9c0\ub294 \uc0c1\uad00 \uc5c6\uc2b5\ub2c8\ub2e4.\n\uc774\ub294 \uc785\ub825\ud558\ub294 \uc7a5\uce58, \ucd9c\ub825\ud558\ub294 \uc7a5\uce58, \uc5f0\uc0b0\ud558\ub294 \uc7a5\uce58\uc640 \uac19\uc774 \ucd94\uc0c1\uc801\uc73c\ub85c \ubc1b\uc544\ub4e4\uc5ec \ub3d9\uc791\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4.\n\uc2e4\uc81c \uc5b4\ub5bb\uac8c \ub3cc\uc544\uac08\uc9c0\uc5d0 \ub300\ud574\uc11c\ub294 \ud574\ub2f9 \uc7a5\uce58\uc5d0\uc11c \uacb0\uc815\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"nand-to-tetris-the-big-picture"},"Nand to Tetris: the big picture"),(0,a.kt)("p",null,"Human Thought --\x3e High Level Language ---\x3e VM Code ---\x3e Low Level Code ---\x3e Computer Architecture ---\x3e CPU, RAM chipset ---\x3e Elementary Logic Gates ---\x3e Hardware"),(0,a.kt)("p",null,"\uc6b0\ub9ac\uac00 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud55c\ub2e4\ub294 \uac83\uc740 \uac1c\ubc1c\uc790\uc758 \ub85c\uc9c1, \uc0dd\uac01\uc744 \uc0ac\uc6a9\uc790\uac00 \uc218\ud589\ud558\ub294 \uac83\uc774\ub77c\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7f0 \uac1c\ubc1c\uc790\uc758 \ub85c\uc9c1, \uc0dd\uac01\uc740 \uace0\uc218\uc900\uc758 \uc5b8\uc5b4\ub85c \uc791\uc131\uc774 \ub418\uba70 \uc800\uc218\uc900 \uc5b8\uc5b4\ub85c \ubcc0\ud658\ub418\uace0 \ucd5c\uc885\uc801\uc73c\ub85c\ub294 \uc804\uc790\uc801 \ud558\ub4dc\uc6e8\uc5b4\ub97c \uc81c\uc5b4\ud558\uae30 \uc704\ud574 0\uacfc 1\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4.\n\uc774 \uacfc\uc815\ub4e4\uc744 \ud55c\ubc88\uc529 \uacbd\ud5d8\ud574\ubcf4\ub294 \uac83\uc774 \uac15\uc758\uc758 \ud2b9\uc9d5\uc785\ub2c8\ub2e4."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc911\uc694\ud558\uac8c \uc5ec\uae30\ub294 \uc0ac\ub78c\uc740 \uc2a4\uc2a4\ub85c \uc790\uc2e0\uc758 \ud558\ub4dc\uc6e8\uc5b4\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud55c\ub2e4. ","-"," \uc568\ub7f0 \ucf00\uc774, OOP \ucc3d\uc2dc\uc790")),(0,a.kt)("h2",{id:"nand-to-tetris-part-1"},"Nand to Tetris: Part 1"),(0,a.kt)("p",null,"Hardware ---\x3e Elementary Logic Gates ---\x3e CPU, RAM chipset ---\x3e Computer Architecture"),(0,a.kt)("p",null,"nand 2 tetris \uac15\uc758\ub294 Bottom-up \ubc29\uc2dd\uc73c\ub85c \uc9c4\ud589\ub429\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"how-to-build-a-chip"},"How to build a chip?"),(0,a.kt)("p",null,"\ud558\ub4dc\uc6e8\uc5b4\ub294 \uc9c1\uc811 \ub9cc\ub4e4 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4.\n\uc18c\ud504\ud2b8\uc6e8\uc5b4\ub85c \uc81c\uc791\ud558\uace0 \uac00\uc0c1\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub294 HardwareSimulator \ub77c\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc774\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"building-a-chip-design"},"Building a chip: design"),(0,a.kt)("p",null,"\uac8c\uc774\ud2b8 \ub85c\uc9c1\uc740 HDL \uc774\ub77c\ub294 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4 xor \ub85c\uc9c1\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc9c4\ub9ac\ud45c\ub97c \uac16\uc2b5\ub2c8\ub2e4."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"a"),(0,a.kt)("th",{parentName:"tr",align:null},"b"),(0,a.kt)("th",{parentName:"tr",align:null},"out"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"0")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"0")))),(0,a.kt)("p",null,"\uc774\ub97c \uce69 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc73c\ub85c \ud45c\ud604\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)("img",{src:"/nand2tetris-study/img/xor_diagram.png",width:"600"}),(0,a.kt)("p",null,"\uc774\ub97c HDL \uc5b8\uc5b4\ub85c \ud45c\ud604\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-HDL"},"CHIP xor {\n  IN a, b;\n  OUT out;\n\n  PARTS:\n  Not (in=a, out=nota);\n  Not (in=b, out=notb);\n  And (a=a, b=notb, out=aAndNotb);\n  And (a=nota, b=b, out=notaAndb);\n  Or  (a=aNdNotb, b=notaAndb, out=out);\n}\n\n")),(0,a.kt)("h2",{id:"weekly-projects"},"Weekly Projects"),(0,a.kt)("h3",{id:"week1-elementary-logic-gates"},"Week1: Elementary logic gates"),(0,a.kt)("p",null,"Nand, Not, And, Or, Xor, Mux, Dmux, Not16, And16, Or16, Mux16, Or8Way, Mux4Way16, Mux8Way16, DMux4Way, DMux8Way"),(0,a.kt)("h3",{id:"week2-arithmetic-logic-unit"},"Week2: Arithmetic-Logic Unit"),(0,a.kt)("p",null,"HalfAdder, FullAdder, Add16, Inc16, ALU"),(0,a.kt)("h3",{id:"week3-registers-and-memory"},"Week3: Registers and Memory"),(0,a.kt)("p",null,"Bit, Register, RAM8, RAM64, RAM512, RAM4K, RAM16K, PC"),(0,a.kt)("h3",{id:"week4-writing-low-level-programs"},"Week4: Writing low-level programs"),(0,a.kt)("h3",{id:"week5-computer-architecture"},"Week5: Computer architecture"),(0,a.kt)("p",null,"Memory, CPU, Computer"),(0,a.kt)("h3",{id:"week6-developing-an-assembler"},"Week6: Developing an assembler"))}p.isMDXComponent=!0}}]);